<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.catstagram.mapper.FeedMapper">
	<!-- 메인 화면의 팔로잉(내 친구)들의 피드와 내가 쓴 피드 -->
	<select id="mainFollowingFeed" parameterType="Integer" resultType="com.catstagram.etc.model.MainFollowingFeedDTO">
		select
		    m.member_idx, m.member_id, m.member_img, 
		    fe.feed_idx, fe.feed_img, fe.feed_content, fe.feed_like_count, fe.feed_date,
		    trunc((sysdate-fe.feed_date) * 24 * 60) as feed_date_minute
		from
		    catstagram_follow f, catstagram_member m, catstagram_feed fe
		where
		    f.member_to = m.member_idx
		and
		    f.member_from = #{sidx}
		and
		    f.member_to = fe.member_idx
		and
		    fe.feed_date >= sysdate - 7
		union
		select
		    m.member_idx, m.member_id, m.member_img, 
		    fe.feed_idx, fe.feed_img, fe.feed_content, fe.feed_like_count, fe.feed_date,
		    trunc((sysdate-fe.feed_date) * 24 * 60) as feed_date_minute
		from
		    catstagram_member m, catstagram_feed fe
		where
		    m.member_idx = ${sidx}
		and
		    m.member_idx = fe.member_idx
		and
		    fe.feed_date >= sysdate - 7
		order by
		    feed_date desc
	</select>

	<!-- 피드 등록 -->
	<insert id="feedWrite" parameterType="com.catstagram.feed.model.FeedDTO">
		insert into
			catstagram_feed
		values
			(catstagram_feed_idx.nextval, #{member_idx}, #{feed_img}, #{feed_content}, 0, sysdate)
	</insert>
	
	<!-- 해당 피드 작성자의 idx(피드 수정 페이지 이동 시 필요) -->
	<select id="feedMemberIdx" parameterType="Integer" resultType="Integer">
		select member_idx from catstagram_feed where feed_idx = #{feed_idx}
	</select>
	
	<!-- 수정할 피드의 정보 -->
	<select id="feedUpdateInfo" parameterType="Integer" resultType="com.catstagram.feed.model.FeedDTO">
		select member_idx, feed_idx, feed_img, feed_content from catstagram_feed where feed_idx = #{feed_idx}
	</select>
	
	<!-- 피드 수정 -->
	<update id="feedUpdate" parameterType="com.catstagram.feed.model.FeedDTO">
		update catstagram_feed
		set feed_content = #{feed_content}
		where feed_idx = #{feed_idx}
	</update>
	
	<!-- 피드 삭제 -->
	<delete id="feedDel" parameterType="Integer">
		delete from catstagram_feed where feed_idx = #{feed_idx}
	</delete>
	
	<!-- 피드 좋아요수 증가 -->
	<update id="feedLikeCountPlus" parameterType="Integer">
		update catstagram_feed
		set feed_like_count = feed_like_count + 1
		where feed_idx = #{feed_idx}
	</update>
	
	<!-- 피드 좋아요수 감소 -->
	<update id="feedLikeCountMinus" parameterType="Integer">
		update catstagram_feed
		set feed_like_count = feed_like_count - 1
		where feed_idx = #{feed_idx}
	</update>
	
	<!-- 피드 좋아요수 -->
	<select id="feedLikeCount" parameterType="Integer" resultType="Integer">
		select feed_like_count from catstagram_feed where feed_idx = #{feed_idx}
	</select>
	
	<!-- catstagram 피드 목록 -->
	<select id="feedList" parameterType="Integer" resultType="com.catstagram.etc.model.MainFollowingFeedDTO">
		select
		    m.member_idx, m.member_id, m.member_img, 
		    fe.feed_idx, fe.feed_img, fe.feed_content, fe.feed_like_count, fe.feed_date,
		    trunc((sysdate-fe.feed_date) * 24 * 60) as feed_date_minute
		from
		    catstagram_member m, catstagram_feed fe
		where
		    fe.member_idx = m.member_idx and m.member_idx = #{member_idx}
		order by
			fe.feed_date desc
	</select>
</mapper>